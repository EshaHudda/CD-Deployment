name: Docker CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub (optional, for pushing from CI)
      if: github.event_name == 'push'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Tag Docker Image
      id: build-image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile
        push: ${{ github.event_name == 'push' }}
        tags: ${{ secrets.DOCKER_USERNAME }}/my-simple-app:${{ github.sha }}
        labels: |
          org.label-schema.schema-version=1.0
          org.label-schema.vcs-ref=${{ github.sha }}
          org.label-schema.vcs-url=${{ github.event.repository.html_url }}

    - name: Run Tests (Simple Test - Adapt as needed)
      run: |
        docker run --rm -p 5000:3002 ${{ steps.build-image.outputs.digest }} node -e "require('http').get('http://localhost:3002', (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }).on('error', (err) => process.exit(1));"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Pull Docker Image from Docker Hub
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/my-simple-app:${{ github.sha }}

    - name: Stop and Remove Existing Container (if any)
      run: |
        docker stop my-simple-app-staging || true
        docker rm my-simple-app-staging || true

    - name: Run Docker Container
      run: docker run -d --name my-simple-app-staging -p 80:3002 ${{ secrets.DOCKER_USERNAME }}/my-simple-app:${{ github.sha }}